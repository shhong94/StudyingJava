/*
 * 	◆ 클래스의 구성요소
 * 		1. 변수
 * 		2. 메소드
 * 		3. 생성자 (선언한 변수에 대한 초기값) 생략가능		★☆★☆★☆★☆★☆★☆★☆★☆
 * 			① 클래스명과 동일
 * 			② 리턴형이 없음
 * 			③ 여러개 존재 가능(오버로딩)
 * 
 * 	◆ 클래스의 선언부 영역
 * 		1. 제어문, 연산처리 불가 (구현부인 메소드, 생성자 내에서 처리해야 함)
 * 		2. 변수 선언만 가능 (기본형 데이터, 배열, 클래스)
 * 
 * 	◆ 생성자의 역할
 * 		1. 클래스를 메모리에 저장할 경우 반드시 호출되어야 함
 * 		2. 멤버변수의 초기값 담당(윈도우, 네트워크, 쓰레드, DB연결)
 * 		3. 
 * 
 * 	◆ 오버로딩
 * 		1. 같은 이름의 메소드
 * 		2. 한 개의 클래스 내에서 만들어짐
 * 		3. 매개변수의 갯수 또는 데이터형이 다름
 * 		4. 리턴형은 상관 없음
 * 
 * 	◆ 클래스에서 만드는 메소드
 * 		1. 따로 저장되는 메소드(인스턴스 메소드)
 * 		2. 공통으로 사용되는 메소드(정적static 메소드)
 * 		3. 저장에 필요한 메소드(생성자 메소드)
 * 			class A
 * 			A() <================================ default 생성자(매개변수가 없음)	 생성자가 없는 경우에는 가상머신이 자동으로 생상자변수 추가. 
 * 			A(int a) ....
 * 
 * 
 * 	◆ 초기화하는 방법
 * 		1. 생성자메소드 이용
 * 			class A {
 * 				int a;
 * 				int b;
 * 				A () {
 * 					a = 10
 * 					b = 10
 * 				}
 * 			}
 * 
 * 		2. 초기화 블록 이용
 * 			class A {
 * 				int a;
 * 				int b;
 * 				{
 * 					a = 10
 * 					b = 10
 * 				}
 * 			}
 */
import javax.swing.*;
public class MainClass {
	
	String book = "Java의 정석";
	String author = "남궁성";
	static String publisher = "도우출판";

	public static void main(String[] args) {
		MainClass m = new MainClass();
		System.out.println(m.book);

	}

}
